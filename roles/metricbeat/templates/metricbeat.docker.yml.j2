metricbeat.config:
  modules:
    path: ${path.config}/modules.d/*.yml
    # Reload module configs as they change:
    reload.enabled: false

#metricbeat.autodiscover:
#  providers:
#    - type: docker
#      hints.enabled: true

metricbeat.modules:
#- module: docker
#  metricsets:
#    - "container"
#    - "cpu"
#    - "diskio"
#    - "healthcheck"
#    - "info"
#    #- "image"
#    - "memory"
#    - "network"
#  hosts: ["unix:///var/run/docker.sock"]
#  period: 10s
#  enabled: true

- module: elasticsearch
  metricsets:
    - node
    - node_stats
    - index
    - index_recovery
    - index_summary
    - shard
    - ml_job
  period: 10s
  hosts:
{% for host in groups['elastic_hosts'] %}
    - {{metricbeat.elastic_http_scheme}}://{{ hostvars[host]['service_ip'] }}:{{es_api_port}}
{% endfor %}

  username: "{{metricbeat.monitoring_read_user_name}}"
  password: "{{metricbeat.monitoring_read_user_pass}}"
  ssl.certificate_authorities: ["/usr/share/metricbeat/transport_ca.crt"]
  ssl.verification_mode: "{{metricbeat.certificate_validation}}"

  #index_recovery.active_only: true
  xpack.enabled: true
  scope: cluster

- module: kibana
  metricsets: ["stats", "status"]
  period: 10s
  hosts:
{% for host in groups['kibana_hosts'] %}
    - {{metricbeat.kibana_http_scheme}}://{{ hostvars[host]['service_ip'] }}:5601
{% endfor %}

  username: "{{metricbeat.monitoring_read_user_name}}"
  password: "{{metricbeat.monitoring_read_user_pass}}"
  basepath: ""
  enabled: true
  ssl.certificate_authorities: ["/usr/share/metricbeat/kibana_signing_ca.crt"]
  ssl.verification_mode: "{{metricbeat.certificate_validation}}"

  # Set to true to send data collected by module to X-Pack
  # Monitoring instead of metricbeat-* indices.
  xpack.enabled: true

{% if groups['logstash_hosts'] is defined and groups['logstash_hosts'] %}
- module: logstash
  metricsets: ["node", "node_stats"]
  period: 10s
  hosts:
{% for host in groups['logstash_hosts'] %}
    - {{metricbeat.logstash_http_scheme}}://{{ hostvars[host]['service_ip'] }}:9600
    - {{metricbeat.logstash_http_scheme}}://{{ hostvars[host]['service_ip'] }}:9601
{% endfor %}
#  username: "{{metricbeat.monitoring_read_user_name}}"
#  password: "{{metricbeat.monitoring_read_user_pass}}"
  enabled: true
  ssl.certificate_authorities: ["/usr/share/metricbeat/transport_ca.crt"]
  ssl.verification_mode: "{{metricbeat.certificate_validation}}"

  # Set to true to send data collected by module to X-Pack
  # Monitoring instead of metricbeat-* indices.
  xpack.enabled: true
{% endif %}

- module: beat
  metricsets:
    - stats
    - state
  period: 10s
  hosts:
{% for host in groups['filebeat_hosts'] %}
    - {{metricbeat.beat_http_scheme}}://{{ hostvars[host]['service_ip'] }}:5066
{% endfor %}
  ssl.certificate_authorities: ["/usr/share/metricbeat/transport_ca.crt"]
  ssl.verification_mode: "{{metricbeat.certificate_validation}}"
  enabled: true
  # Set to true to send data collected by module to X-Pack
  # Monitoring instead of metricbeat-* indices.
  xpack.enabled: true

- module: beat
  metricsets:
    - stats
    - state
  period: 10s
  hosts:
{% for host in groups['metricbeat_hosts'] %}
    - {{metricbeat.beat_http_scheme}}://{{ hostvars[host]['service_ip'] }}:5067
{% endfor %}

  ssl.certificate_authorities: ["/usr/share/metricbeat/transport_ca.crt"]
  ssl.verification_mode: "{{metricbeat.certificate_validation}}"
  enabled: true
  # Set to true to send data collected by module to X-Pack
  # Monitoring instead of metricbeat-* indices.
  xpack.enabled: true

processors:
  - add_cloud_metadata: ~

processors:
  - add_tags:
      tags: [{{metricbeat.source_cluster_name}}, production]
      target: "environment"

monitoring.cluster_uuid: "{{cluster_uuid}}"

# =============================== HTTP Endpoint ================================

# Each beat can expose internal metrics through a HTTP endpoint. For security
# reasons the endpoint is disabled by default. This feature is currently experimental.
# Stats can be access through http://localhost:5066/stats . For pretty JSON output
# append ?pretty to the URL.

# Defines if the HTTP endpoint is enabled.
http.enabled: true

# The HTTP endpoint will bind to this hostname, IP address, unix socket or named pipe.
# When using IP addresses, it is recommended to only use localhost.
http.host: "{{metricbeat.ip_address}}"

# Port on which the HTTP endpoint will bind. Default is 5066.
http.port: "{{metricbeat.ports[1]}}"

# Define which user should be owning the named pipe.
#http.named_pipe.user:

# Define which the permissions that should be applied to the named pipe, use the Security
# Descriptor Definition Language (SDDL) to define the permission. This option cannot be used with
# `http.user`.
#http.named_pipe.security_descriptor:

# =================================== Kibana ===================================

# Starting with Beats version 6.0.0, the dashboards are loaded via the Kibana API.
# This requires a Kibana endpoint configuration.
setup.kibana:

  # Kibana Host
  # Scheme and port can be left out and will be set to the default (http and 5601)
  # In case you specify and additional path, the scheme is required: http://localhost:5601/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:5601
  host: {{ hostvars[groups['kibana_hosts'][0]]['service_ip'] }}

  # Optional protocol and basic auth credentials.
  protocol: "{{ metricbeat.kibana_http_scheme }}"
  username: "filebeat_kibana_setup_user"
  password: "{{ filebeat_kibana_setup_user_password }}"

  # Optional HTTP path
  #path: ""

  # Optional Kibana space ID.
  #space.id: ""

  # Use SSL settings for HTTPS.
  ssl.enabled: true

  # Controls the verification of certificates. Valid values are:
  # * full, which verifies that the provided certificate is signed by a trusted
  # authority (CA) and also verifies that the server's hostname (or IP address)
  # matches the names identified within the certificate.
  # * strict, which verifies that the provided certificate is signed by a trusted
  # authority (CA) and also verifies that the server's hostname (or IP address)
  # matches the names identified within the certificate. If the Subject Alternative
  # Name is empty, it returns an error.
  # * certificate, which verifies that the provided certificate is signed by a
  # trusted authority (CA), but does not perform any hostname verification.
  #  * none, which performs no verification of the server's certificate. This
  # mode disables many of the security benefits of SSL/TLS and should only be used
  # after very careful consideration. It is primarily intended as a temporary
  # diagnostic mechanism when attempting to resolve TLS errors; its use in
  # production environments is strongly discouraged.
  # The default value is full.
  ssl.verification_mode: "{{ xpack_http_ssl_verification_mode }}"

  # List of supported/valid TLS versions. By default all TLS versions from 1.1
  # up to 1.3 are enabled.
  #ssl.supported_protocols: [TLSv1.1, TLSv1.2, TLSv1.3]

  # List of root certificates for HTTPS server verifications
  ssl.certificate_authorities: ["/usr/share/metricbeat/kibana_signing_ca.crt"]

  # Certificate for SSL client authentication
  #ssl.certificate: "/etc/pki/client/cert.pem"

  # Client certificate key
  #ssl.key: "/etc/pki/client/cert.key"

  # Optional passphrase for decrypting the certificate key.
  #ssl.key_passphrase: ''

  # Configure cipher suites to be used for SSL connections
  #ssl.cipher_suites: []

  # Configure curve types for ECDHE-based cipher suites
  #ssl.curve_types: []

  # Configure what types of renegotiation are supported. Valid options are
  # never, once, and freely. Default is never.
  #ssl.renegotiation: never

  # Configure a pin that can be used to do extra validation of the verified certificate chain,
  # this allow you to ensure that a specific certificate is used to validate the chain of trust.
  #
  # The pin is a base64 encoded string of the SHA-256 fingerprint.
  #ssl.ca_sha256: ""

# ---------------------------- Elasticsearch Output ----------------------------
output.elasticsearch:
  hosts: '${ELASTICSEARCH_HOSTS:localhost:9200}'
  username: '${ELASTICSEARCH_USERNAME:}'
  password: '${ELASTICSEARCH_PASSWORD:}'
  ssl.certificate_authorities: ["/usr/share/metricbeat/transport_ca.crt"]
  ssl.verification_mode: "{{metricbeat.certificate_validation}}"
